(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["main-default","doc-markdown","doc-markdown-font-family-md","doc-markdown-proxy-md"],{1472:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("p",[e._v("浏览器中展示网页文字内容时，文字字体都会按照设计师在css中定义的字体族的顺序来进行显示。什么是字体族？字体族就是你在css代码中看到“font-family”的代码内的一类字体名称，例如下面这行代码：")]),n("blockquote",[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[e._v('\nfont-family: Georgia, "Times New Roman", \n             "Microsoft YaHei", "微软雅黑", \n             STXihei, "华文细黑", \n             serif;\n \n')])])]),n("p",[e._v("CSS的font-family命令，指定了网页元素所使用的字体。它的规则有三条。")]),n("blockquote",[n("p",[e._v("（1）优先使用排在前面的字体。")]),n("p",[e._v("（2）如果找不到该种字体，或者该种字体不包括所要渲染的文字，则使用下一种字体。")]),n("p",[e._v("（3）如果所列出的字体，都无法满足需要，则让操作系统自行决定使用哪种字体。")])]),n("p",[e._v("**根据这些规则，font-family应该优先指定英文字体，然后再指定中文字体。**否则，中文字体所包含的英文字母，会取代英文字体，这往往很丑陋。")]),n("p",[e._v("[图片上传失败...(image-254f5b-1571971948613)]")]),n("p",[e._v("上面图片中，红框内的英文字母，左边采用英文字体渲染，右边采用中文字体渲染，哪一种效果比较好，一目了然。")]),n("p",[e._v("**为了保证兼容性，中文字体的中文名称和英文名称，应该都写入font-family。**比如，”微软雅黑”的英文名称是Microsoft YaHei。")]),n("p",[e._v("此外，中文字体的中文名称，以及由多个单词组成的英文名称，应该放在双引号内。")])])}],a={components:{}},c=a,i=n("2877"),s=Object(i["a"])(c,o,r,!1,null,null,null);t["default"]=s.exports},"3f84":function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"markdown-wrap"},[n(e.docName,{tag:"components"})],1)},r=[],a=n("61f7"),c={name:"Markdown",components:a["default"],props:{docName:{type:String,required:!0}}},i=c,s=(n("5e84"),n("2877")),l=Object(s["a"])(i,o,r,!1,null,"d36ea502",null);t["default"]=l.exports},"431b":function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("p",[e._v("######1、正向代理指的是服务端向客户端发起请求时，不直接发送给客户端而是通过代理服务器转发给客户端（因场景限制、安全要求、性能要求），此时代理服务器就相当于客户端，对于服务端来说真正的客户端是不可见的，这种代理方式我们称之为正向代理。 ######2、反向代理指的客户端向服务端发起请求时，不直接发给服务端而是通过代理服务器转发给服务端（因场景限制、安全要求、性能要求），此时代理服务器就相当于服务端，对于客户端来说真正的服务端是不可见的，这种代理方式我们称之为反向代理。 #####总结一下就是，两种代理方式在技术实现上是完全相同的，区别就在于请求的流向不同。 在网上看到各种五花八门的解释，感觉将简单的问题复杂化了，甚至有些误导。在这里我写下个人理解，有不同意见欢迎留言讨论。")])])}],a={components:{}},c=a,i=n("2877"),s=Object(i["a"])(c,o,r,!1,null,null,null);t["default"]=s.exports},"5e84":function(e,t,n){"use strict";n("a831")},"61f7":function(e,t,n){"use strict";n.r(t);var o=n("1472"),r=n("431b");t["default"]={FontFamily:o["default"],DocumentProxy:r["default"]}},a831:function(e,t,n){}}]);
//# sourceMappingURL=main-default.ceed7895.js.map